// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model operadores{
  id Int @id @default(autoincrement())
  nome String
  funcao String?
  email String @unique
  password String

  //Fazer relação com rota: uma rota um operador:
  rota Rota?  @relation(fields: [rotaId], references: [id])
  rotaId Int? @unique

}
model QRCodes{
  idQR Int @id @default(autoincrement())
  dadosQR String @unique
  longitude String @unique
  latitude String @unique
  detalheCode String?
}

model Rota{
  id Int @id @default(autoincrement())
  nome String
  detalhe String?
  pontos Ponto[] //uma rota tem muitos pontos geográficos
  operador operadores? @relation()
}

model Ponto{
  id Int @id @default(autoincrement())
  lat Float
  lng Float
  rota Rota @relation(fields: [rotaId], references: [id], onDelete:Cascade)  //onDelete: Cascade -PARA APAGAR OS PONTOS QUANDO A ROTA FOR APAGADA
  rotaId Int
}

model relatorio{
  id Int @id @default(autoincrement()) 
  tipo String
  volume String
  rota Int
  operador Int
  nomeoperador String

}